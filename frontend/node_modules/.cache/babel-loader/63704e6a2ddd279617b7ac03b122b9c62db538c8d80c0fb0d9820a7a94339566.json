{"ast":null,"code":"var _jsxFileName = \"C:\\\\StudentPortal\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const fetchUserProfile = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/auth/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n      } else {\n        // Token is invalid, clear it\n        logout();\n      }\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  }, [token]);\n  useEffect(() => {\n    if (token) {\n      // Verify token and get user profile\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, [token, fetchUserProfile]);\n  const login = async (username, password) => {\n    try {\n      const response = await fetch('http://localhost:8080/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setToken(data.token);\n        setUser(data.user);\n        localStorage.setItem('token', data.token);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Network error'\n      };\n    }\n  };\n  const signup = async (username, email, password) => {\n    try {\n      const response = await fetch('http://localhost:8080/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setToken(data.token);\n        setUser(data.user);\n        localStorage.setItem('token', data.token);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Network error'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    signup,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"w/ysnxwH+7hqjyZNAfK0I1no08c=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","fetchUserProfile","response","fetch","headers","ok","data","json","logout","error","console","login","username","password","method","body","JSON","stringify","setItem","success","signup","email","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/StudentPortal/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchUserProfile = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/auth/profile', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUser(data.user);\r\n      } else {\r\n        // Token is invalid, clear it\r\n        logout();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      // Verify token and get user profile\r\n      fetchUserProfile();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token, fetchUserProfile]);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setToken(data.token);\r\n        setUser(data.user);\r\n        localStorage.setItem('token', data.token);\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: data.error };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Network error' };\r\n    }\r\n  };\r\n\r\n  const signup = async (username, email, password) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/auth/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setToken(data.token);\r\n        setUser(data.user);\r\n        localStorage.setItem('token', data.token);\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: data.error };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Network error' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}