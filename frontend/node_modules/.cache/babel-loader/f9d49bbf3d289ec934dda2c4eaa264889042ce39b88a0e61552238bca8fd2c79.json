{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:8080/api';// Create axios instance with default config\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add request interceptor to include auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Add response interceptor to handle auth errors\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Token is invalid, redirect to login\nlocalStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});export const studentApi={// Get all students\ngetAllStudents:async()=>{const response=await api.get('/students');return response.data.data;},// Get students by department\ngetStudentsByDepartment:async department=>{const response=await api.get(\"/students/department/\".concat(encodeURIComponent(department)));return response.data.data;},// Create a new student\ncreateStudent:async student=>{const response=await api.post('/students',student);return response.data.data;},// Update a student\nupdateStudent:async(id,student)=>{const response=await api.put(\"/students/\".concat(id),student);return response.data.data;},// Delete a student\ndeleteStudent:async id=>{await api.delete(\"/students/\".concat(id));}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","studentApi","getAllStudents","get","data","getStudentsByDepartment","department","encodeURIComponent","createStudent","student","post","updateStudent","id","put","deleteStudent","delete"],"sources":["C:/StudentPortal/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to include auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token is invalid, redirect to login\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const studentApi = {\r\n  // Get all students\r\n  getAllStudents: async () => {\r\n    const response = await api.get('/students');\r\n    return response.data.data;\r\n  },\r\n\r\n  // Get students by department\r\n  getStudentsByDepartment: async (department) => {\r\n    const response = await api.get(`/students/department/${encodeURIComponent(department)}`);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Create a new student\r\n  createStudent: async (student) => {\r\n    const response = await api.post('/students', student);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Update a student\r\n  updateStudent: async (id, student) => {\r\n    const response = await api.put(`/students/${id}`, student);\r\n    return response.data.data;\r\n  },\r\n\r\n  // Delete a student\r\n  deleteStudent: async (id) => {\r\n    await api.delete(`/students/${id}`);\r\n  },\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAG,2BAA2B,CAEhD;AACA,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,WAAAC,MAAA,CAAaJ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAM,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAb,GAAG,CAACI,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,EAAKA,QAAQ,CACrBH,KAAK,EAAK,KAAAI,eAAA,CACT,GAAI,EAAAA,eAAA,CAAAJ,KAAK,CAACG,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBC,MAAM,IAAK,GAAG,CAAE,CAClC;AACAT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CACjC,CACA,MAAO,CAAAR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,MAAO,MAAM,CAAAU,UAAU,CAAG,CACxB;AACAC,cAAc,CAAE,KAAAA,CAAA,GAAY,CAC1B,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACyB,GAAG,CAAC,WAAW,CAAC,CAC3C,MAAO,CAAAT,QAAQ,CAACU,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED;AACAC,uBAAuB,CAAE,KAAO,CAAAC,UAAU,EAAK,CAC7C,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACyB,GAAG,yBAAAb,MAAA,CAAyBiB,kBAAkB,CAACD,UAAU,CAAC,CAAE,CAAC,CACxF,MAAO,CAAAZ,QAAQ,CAACU,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED;AACAI,aAAa,CAAE,KAAO,CAAAC,OAAO,EAAK,CAChC,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACgC,IAAI,CAAC,WAAW,CAAED,OAAO,CAAC,CACrD,MAAO,CAAAf,QAAQ,CAACU,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED;AACAO,aAAa,CAAE,KAAAA,CAAOC,EAAE,CAAEH,OAAO,GAAK,CACpC,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACmC,GAAG,cAAAvB,MAAA,CAAcsB,EAAE,EAAIH,OAAO,CAAC,CAC1D,MAAO,CAAAf,QAAQ,CAACU,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED;AACAU,aAAa,CAAE,KAAO,CAAAF,EAAE,EAAK,CAC3B,KAAM,CAAAlC,GAAG,CAACqC,MAAM,cAAAzB,MAAA,CAAcsB,EAAE,CAAE,CAAC,CACrC,CACF,CAAC,CAED,cAAe,CAAAlC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}